#!/usr/bin/env bash
# Re-written in GNU Bash by Alec Ari

if [[ "${EUID}" != 0 ]] ; then
	echo "This script must be run with superuser permissions."
	exit 1
fi

while [[ $# -gt 0 ]] ; do
argument="$1"
case "${argument}" in
	hal_smi_masked_bits)
	;;
	*)
	;;
esac
shift
done

# Determine if setting or resetting
CMDNAME=$(basename "${0}")
case "${CMDNAME}" in
	setsmi)
		SMIRESET="0"
		;;
	rstsmi)
		SMIRESET="1"
		;;
	*)
		echo "invalid SMI script name ${0}"
		exit 1
		;;
esac

if [[ -n "${argument}" && "${argument}" == hal_smi_masked_bits=* ]] ; then
	echo "Using ${argument}"
else
	echo "Using default value 0x1"
fi

MODULENAME="rtai_smi.ko"

PATH="${PATH}:@prefix@/bin"
type rtai-config > /dev/null 2>&1 || \
	{
	echo "${CMDNAME} cannot find rtai-config" ; exit 1 ;
	}

MODULEDIR=$(rtai-config --module-dir)

# If hal_smi_masked_bits is not set, use default
if [[ -n "${argument}" ]] ; then
	SMI_MASKED_BITS="${argument}"
else
	SMI_MASKED_BITS="0x1"
fi

rmmod -s "${MODULENAME}" || echo "${CMDNAME}: rmmod ${MODULENAME} failed" ; exit 1 ;

if [[ "${SMIRESET}" -eq "0" ]] ; then
	insmod "${MODULEDIR}"/"${MODULENAME}" hal_smi_masked_bits="${SMI_MASKED_BITS}" || \
	{
		echo "${CMDNAME}: insmod ${MODULEDIR}/${MODULENAME} failed" ;
		exit 1 ;
	}
fi

exit 0
