#!/usr/bin/env bash
# Re-written in GNU Bash by Alec Ari

if [[ "${EUID}" != "0" ]] ; then
	echo "This script must be run with superuser permissions."
	exit 1
fi

while [[ "${#}" -gt "0" ]] ; do
	argument="${1}"
	case "${argument}" in
		*)
			;;
	esac
	shift
done

# Determine if setting or resetting
CMDNAME=$(basename "${0}")
case "${CMDNAME}" in
	setsmi)
		SMIRESET="0"
		;;
	rstsmi)
		SMIRESET="1"
		;;
	*)
		echo "invalid SMI script name ${0}"
		exit 1
		;;
esac

MODULENAME="rtai_smi.ko"
PATH="${PATH}:@prefix@/bin"

type rtai-config > /dev/null 2>&1 || \
	{
		echo "${CMDNAME} cannot find rtai-config" ; exit 1 ;
	}

MODULEDIR=$(rtai-config --module-dir)

echo "Unconditionally unloading ${MODULENAME}..."
rmmod -s "${MODULENAME}"

if [[ "${SMIRESET}" -eq "0" ]] ; then
	# If hal_smi_masked_bits is not set, use default
	if [[ "${argument}" == "hal_smi_masked_bits="* ]] ; then
		argument_stripped="${argument//hal_smi_masked_bits=/}"
		echo "Using user specified value of ${argument_stripped} to set SMI."
		SMI_MASKED_BITS="${argument_stripped}"
	else
		echo "Using default value 0x1 to set SMI."
		SMI_MASKED_BITS="0x1"
	fi
	insmod "${MODULEDIR}"/"${MODULENAME}" hal_smi_masked_bits="${SMI_MASKED_BITS}" || \
	{
		echo "${CMDNAME}: insmod ${MODULEDIR}/${MODULENAME} failed" ;
		exit 1 ;
	}
fi

exit 0
