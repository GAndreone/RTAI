#!/usr/bin/env bash
# RTAI application loader script - Processes the .runinfo files
# Completely re-written in GNU Bash by Alec Ari

if [[ "${EUID}" != 0 ]] ; then
	echo "This script must be run with superuser permissions."
	exit 1
fi

while [[ "${#}" -gt 0 ]] ; do
argument="${1}"
case "${argument}" in
	runinfo)
		;;
	.runinfo)
		;;
	*)
		echo "Usage: rtai-load [path to .runinfo]"
		exit 0
		;;
	esac
	shift
done

PATH="${PATH}:@prefix@/bin"
type rtai-config > /dev/null 2>&1 || \
	{
	echo "${CMDNAME} cannot find rtai-config" ; exit 1 ;
	}

MODULEDIR=$(rtai-config --module-dir)

if [[ -n "${argument}" && "${argument}" == *runinfo ]] ; then
	RUNINFO="${argument}"
else
	echo "Incorrect or no command specified."
	exit 1
fi

if [[ -r "${RUNINFO}" ]] ; then
	echo ".runinfo is ${RUNINFO}"
else
	echo "Unable to find .runinfo file at ${argument}"
	exit 1
fi

for_insmod=$(cat "${RUNINFO}")
for_rmmod=$(tac "${RUNINFO}")
LOADED_RTAI_MODULES=$(grep "rtai_" /proc/modules)

if [[ -z "${LOADED_RTAI_MODULES}" ]] ; then
	echo "No RTAI modules loaded."
	echo "Running insmod on ${RUNINFO}..."
	for module in ${for_insmod} ; do
		insmod "${MODULEDIR}/${module}"
	done
else
	echo "RTAI loaded."
	echo "Unloading modules..."
	echo "Running rmmod on ${RUNINFO}..."
	for module in ${for_rmmod} ; do
		rmmod "${MODULEDIR}/${module}"
	done
	echo "All RTAI modules unloaded."
	echo "Running insmod on ${RUNINFO}..."
	for module in ${for_insmod} ; do
		insmod "${MODULEDIR}/${module}"
	done
fi

exit 0
